(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[57,644],{35796:function(t,e,n){"use strict";n.d(e,{d:function(){return r}});var i=n(39413);class r extends i.J5{async authenticateUser(){var t;if(!this.provider||null===(t=this.chainConfig)||void 0===t||!t.chainId)throw i.RM.notConnectedError();const{chainNamespace:e,chainId:n}=this.chainConfig;if(this.status!==i.MP.CONNECTED)throw i.RM.notConnectedError("Not connected with wallet, Please login/connect first");const r=await this.provider.request({method:"eth_accounts"});if(r&&r.length>0){const t=(0,i.Cb)(r[0],this.name);if(t){if(!(0,i.$E)(t))return{idToken:t}}const o={domain:window.location.origin,uri:window.location.href,address:r[0],chainId:parseInt(n,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:(new Date).toISOString()},a=await(0,i.tV)(o,e),s=await this.provider.request({method:"personal_sign",params:[a,r[0]]}),c=await(0,i.rn)(e,s,a,this.name,this.sessionTime);return(0,i.Fr)(r[0],this.name,c),{idToken:c}}throw i.RM.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==i.MP.CONNECTED)throw i.RM.disconnectionError("Not connected with wallet");const t=await this.provider.request({method:"eth_accounts"});t&&t.length>0&&(0,i.qz)(t[0],this.name)}}},67845:function(t,e,n){"use strict";n.d(e,{FL:function(){return u},Zk:function(){return p}});var i=n(4942),r=n(22782),o=n(39413),a=n(79826),s=n(64049),c=n(23420),h=n.n(c);function d(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?d(Object(n),!0).forEach((function(e){(0,i.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}class p extends r.xG{constructor(t){let{config:e,state:n}=t;if(super({config:e,state:n}),(0,i.Z)(this,"_providerEngineProxy",null),!e.chainConfig)throw o.Ty.invalidProviderConfigError("Please provide chainConfig");if(!e.chainConfig.chainId)throw o.Ty.invalidProviderConfigError("Please provide chainId inside chainConfig");if(!e.chainConfig.rpcTarget)throw o.Ty.invalidProviderConfigError("Please provide rpcTarget inside chainConfig");this.defaultState={chainId:"loading"},this.defaultConfig={chainConfig:e.chainConfig,networks:{[e.chainConfig.chainId]:e.chainConfig}},super.initialize()}get provider(){return this._providerEngineProxy}set provider(t){throw new Error("Method not implemented.")}addChain(t){if(!t.chainId)throw a.ethErrors.rpc.invalidParams("chainId is required");if(!t.rpcTarget)throw a.ethErrors.rpc.invalidParams("chainId is required");this.configure({networks:l(l({},this.config.networks),{},{[t.chainId]:t})})}getChainConfig(t){var e;const n=null===(e=this.config.networks)||void 0===e?void 0:e[t];if(!n)throw a.ethErrors.rpc.invalidRequest("Chain ".concat(t," is not supported, please add chainConfig for it"));return n}getProviderEngineProxy(){return this._providerEngineProxy}updateProviderEngineProxy(t){this._providerEngineProxy?this._providerEngineProxy.setTarget(t):this._providerEngineProxy=(0,r.qY)(t)}}class u{constructor(){(0,i.Z)(this,"_providerEngineProxy",null)}get provider(){return this._providerEngineProxy}set provider(t){throw new Error("Method not implemented.")}addChain(t){throw new Error("Method not implemented.")}async setupProvider(t){const e=this.getPrivKeyMiddleware(t),n=new s.eI;n.push(e);const i=(0,r.Xj)(n);this.updateProviderEngineProxy(i)}async switchChain(t){return Promise.resolve()}getProviderEngineProxy(){return this._providerEngineProxy}updateProviderEngineProxy(t){this._providerEngineProxy?this._providerEngineProxy.setTarget(t):this._providerEngineProxy=(0,r.qY)(t)}getPrivKeyMiddleware(t){const e={getPrivatekey:async()=>t};return this.createPrivKeyMiddleware(e)}createPrivKeyMiddleware(t){let{getPrivatekey:e}=t;return(0,s.v0)({private_key:(0,s.Pk)((async function(t,n){n.result=await e()}))})}}(0,i.Z)(u,"getProviderInstance",(async t=>{const e=new u;return await e.setupProvider(t.privKey),e}));h()()},43840:function(t,e,n){"use strict";n.r(e),n.d(e,{WalletConnectV1Adapter:function(){return u}});var i=n(4942),r=n(75426),o=n(74131);class a extends r.Z{constructor(t,e){super({cryptoLib:o,connectorOpts:t,pushServerOpts:e})}}var s=a,c=n(39413),h=n(35796),d=n(52062);const l=[{name:"Rainbow",chains:[c.EN.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[c.EN.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}class u extends h.d{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,i.Z)(this,"name",c.rW.WALLET_CONNECT_V1),(0,i.Z)(this,"adapterNamespace",c.yk.EIP155),(0,i.Z)(this,"currentChainNamespace",c.EN.EIP155),(0,i.Z)(this,"type",c.hN.EXTERNAL),(0,i.Z)(this,"adapterOptions",void 0),(0,i.Z)(this,"status",c.MP.NOT_READY),(0,i.Z)(this,"adapterData",{uri:"",extensionAdapters:l}),(0,i.Z)(this,"connector",null),(0,i.Z)(this,"wcProvider",null),(0,i.Z)(this,"rehydrated",!1),this.adapterOptions=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){(0,i.Z)(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t),this.chainConfig=t.chainConfig||null,this.sessionTime=t.sessionTime||86400}get connected(){var t;return!(null===(t=this.connector)||void 0===t||!t.connected)}get provider(){var t;return(null===(t=this.wcProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=(0,c.h2)(c.EN.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new d.WalletConnectProvider({config:{chainConfig:this.chainConfig},connector:this.connector}),this.emit(c.n2.READY,c.rW.WALLET_CONNECT_V1),this.status=c.MP.READY,c.cM.debug("initializing wallet connect v1 adapter"),this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw c.Ty.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}),this.provider;if(this.status!==c.MP.CONNECTING){var t,e;if(null!==(t=this.adapterOptions.adapterSettings)&&void 0!==t&&t.qrcodeModal)this.connector=this.getWalletConnectInstance(),this.wcProvider=new d.WalletConnectProvider({config:{chainConfig:this.chainConfig,skipLookupNetwork:null===(e=this.adapterOptions.adapterSettings)||void 0===e?void 0:e.skipNetworkSwitching},connector:this.connector});await this.createNewSession(),this.status=c.MP.CONNECTING,this.emit(c.n2.CONNECTING,{adapter:c.rW.WALLET_CONNECT_V1})}return new Promise(((t,e)=>{if(!this.connector)return e(c.Ty.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",(async()=>(this.status=c.MP.READY,this.emit(c.n2.READY,c.rW.WALLET_CONNECT_V1),e(new Error("User closed modal")))));try{this.connector.on("connect",(async(e,n)=>(e&&this.emit(c.n2.ERRORED,e),c.cM.debug("connected event emitted by web3auth"),await this.onConnectHandler(n.params[0]),t(this.provider))))}catch(n){c.cM.error("Wallet connect v1 adapter error while connecting",n),this.status=c.MP.READY,this.rehydrated=!0,this.emit(c.n2.ERRORED,n),e(n instanceof c.up?n:c.RM.connectionError("Failed to login with wallet connect: ".concat((null===n||void 0===n?void 0:n.message)||"")))}}))}setAdapterSettings(t){this.status!==c.MP.READY&&null!==t&&void 0!==t&&t.sessionTime&&(this.sessionTime=t.sessionTime)}async getUserInfo(){if(!this.connected)throw c.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};const{cleanup:e}=t;if(!this.connector||!this.connected)throw c.RM.notConnectedError("Not connected with wallet");await super.disconnect(),await this.connector.killSession(),this.rehydrated=!1,e?(this.connector=null,this.status=c.MP.NOT_READY,this.wcProvider=null):this.status=c.MP.READY,this.emit(c.n2.DISCONNECTED)}async addChain(t){try{var e;if(!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");const n=null===(e=this.adapterOptions.adapterSettings)||void 0===e?void 0:e.networkSwitchModal;n&&await n.addNetwork({chainConfig:t,appOrigin:window.location.hostname}),await this.wcProvider.addChain(t)}catch(n){c.cM.error(n)}}async switchChain(t,e){var n;if(!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");const i=null===(n=this.adapterOptions.adapterSettings)||void 0===n?void 0:n.networkSwitchModal;i&&await i.switchNetwork({currentChainConfig:e,newChainConfig:t,appOrigin:window.location.hostname}),await this.wcProvider.switchChain({chainId:e.chainId,lookup:!1,addChain:!1})}async createNewSession(){var t,e;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw c.Ty.notReady("Wallet adapter is not ready yet");if(n.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null===(t=this.adapterOptions)||void 0===t||null===(e=t.adapterSettings)||void 0===e||!e.qrcodeModal)return new Promise(((t,e)=>{var n;if(!this.connector)return e(c.Ty.notReady("Wallet adapter is not ready yet"));c.cM.debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",(async(n,i)=>{var r;if(n)return this.emit(c.n2.ERRORED,c.RM.connectionError("Failed to display wallet connect qr code")),e(n);const o=i.params[0];return this.updateAdapterData({uri:o,extensionAdapters:l}),null===(r=this.connector)||void 0===r||r.off("display_uri"),t()})),this.connector.createSession({chainId:parseInt((null===(n=this.chainConfig)||void 0===n?void 0:n.chainId)||"0x1",16)}).catch((t=>(c.cM.error("error while creating new wallet connect session",t),this.emit(c.n2.ERRORED,t),e(t))))}));var i;await this.connector.createSession({chainId:parseInt((null===(i=this.chainConfig)||void 0===i?void 0:i.chainId)||"0x1",16)})}async onConnectHandler(t){if(!this.connector||!this.wcProvider)throw c.Ty.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw c.Ty.invalidParams("Chain config is not set");const{chainId:e}=t;if(c.cM.debug("connected chainId in hex"),e!==parseInt(this.chainConfig.chainId,16)){var n,i,r;const t=(0,c.h2)(c.EN.EIP155,e)||{chainId:"0x".concat(e.toString(16)),displayName:"Unknown Network"},a=null===(n=this.adapterOptions.adapterSettings)||void 0===n?void 0:n.qrcodeModal;if(!a||a&&(null===(i=this.adapterOptions)||void 0===i||null===(r=i.adapterSettings)||void 0===r||!r.skipNetworkSwitching))try{await this.addChain(this.chainConfig),await this.switchChain(t,this.chainConfig),this.connector=this.getWalletConnectInstance()}catch(o){return c.cM.error("error while chain switching",o),await this.createNewSession({forceNewSession:!0}),this.emit(c.n2.ERRORED,c.Ty.fromCode(5e3,"Not connected to correct network. Expected: ".concat(this.chainConfig.displayName,", Current: ").concat((null===t||void 0===t?void 0:t.displayName)||e,", Please switch to correct network from wallet"))),this.status=c.MP.READY,void(this.rehydrated=!0)}}await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=c.MP.CONNECTED,this.emit(c.n2.CONNECTED,{adapter:c.rW.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(t){t.on("session_update",(async t=>{t&&this.emit(c.n2.ERRORED,t)}))}getWalletConnectInstance(){const t=this.adapterOptions.adapterSettings||{};return t.bridge=t.bridge||"https://bridge.walletconnect.org",new s(t)}}},27790:function(){},88924:function(){},55024:function(){}}]);